{"/home/travis/build/npmtest/node-npmtest-ng2-responsive/test.js":"/* istanbul instrument in package npmtest_ng2_responsive */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ng2-responsive/lib.npmtest_ng2_responsive.js":"/* istanbul instrument in package npmtest_ng2_responsive */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ng2_responsive = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ng2_responsive = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ng2-responsive/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ng2-responsive && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ng2_responsive */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ng2_responsive\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ng2_responsive.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ng2_responsive.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ng2_responsive.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ng2_responsive.__dirname + '/lib.npmtest_ng2_responsive.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/index.js":"/**\n * Responsive Devices Detect Directives for Angular 2\n *\n * @Created_by Manu Cutillas\n * @Contributors Christophe HOARAU, Kamil Breguła\n * @created_at May 04, 2016\n * @updated_at Febr 5, 2017 - by ManuCutillas\n * @version_0.7.5\n *\n * Dependencies:\n * @angular/core : \"2.4.6\"\n * rxjs: \"5.1.0\"\n *\n * @more_info https://github.com/ManuCutillas\n *            https://www.npmjs.com/~manucutillas\n *            https://github.com/no-more\n *\n * @description : NG2-RESPONSIVE\n *\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar index_1 = require('./config/index');\nvar index_2 = require('./bootstrap/index');\nvar index_3 = require('./browsers/index');\nvar index_4 = require('./custom-sizes/index');\nvar index_5 = require('./devices/index');\nvar index_6 = require('./pixelratio/index');\nvar index_7 = require('./responsive/index');\nvar index_8 = require('./responsive-window/index');\nvar index_9 = require('./useragent/index');\nvar index_10 = require('./config/index');\nexports.ResponsiveConfig = index_10.ResponsiveConfig;\nexports.ResponsiveState = index_10.ResponsiveState;\nexports.ResponsiveConfigInterface = index_10.ResponsiveConfigInterface;\nvar ResponsiveModule = (function () {\n    function ResponsiveModule() {\n    }\n    ResponsiveModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        index_2.BOOTSTRAP_DIRECTIVES,\n                        index_3.BROWSER_DIRECTIVES,\n                        index_4.CUSTOMSIZES_DIRECTIVES,\n                        index_5.DEVICES_DIRECTIVES,\n                        index_6.PIXELRATIO_DIRECTIVES,\n                        index_7.RESPONSIVE_DIRECTIVE,\n                        index_8.RESPONSIVEWINDOW_DIRECTIVE,\n                        index_9.USERAGENT_DIRECTIVE\n                    ],\n                    exports: [\n                        index_2.BOOTSTRAP_DIRECTIVES,\n                        index_3.BROWSER_DIRECTIVES,\n                        index_4.CUSTOMSIZES_DIRECTIVES,\n                        index_5.DEVICES_DIRECTIVES,\n                        index_6.PIXELRATIO_DIRECTIVES,\n                        index_7.RESPONSIVE_DIRECTIVE,\n                        index_8.RESPONSIVEWINDOW_DIRECTIVE,\n                        index_9.USERAGENT_DIRECTIVE,\n                    ],\n                    providers: [\n                        index_1.ResponsiveState,\n                        index_1.ResponsiveConfig\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ResponsiveModule.ctorParameters = function () { return []; };\n    return ResponsiveModule;\n}());\nexports.ResponsiveModule = ResponsiveModule;\n//# sourceMappingURL=index.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/bootstrap/bootstrap-directives.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar XL = (function (_super) {\n    __extends(XL, _super);\n    function XL(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'xl';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(XL.prototype, \"xl\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XL.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[xl]'\n                },] },\n    ];\n    /** @nocollapse */\n    XL.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    XL.propDecorators = {\n        'xl': [{ type: core_1.Input },],\n    };\n    return XL;\n}(index_1.RESPONSIVE_BASE));\nexports.XL = XL;\nvar LG = (function (_super) {\n    __extends(LG, _super);\n    function LG(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'lg';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(LG.prototype, \"lg\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LG.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[lg]'\n                },] },\n    ];\n    /** @nocollapse */\n    LG.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    LG.propDecorators = {\n        'lg': [{ type: core_1.Input },],\n    };\n    return LG;\n}(index_1.RESPONSIVE_BASE));\nexports.LG = LG;\nvar MD = (function (_super) {\n    __extends(MD, _super);\n    function MD(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'md';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(MD.prototype, \"md\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MD.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[md]'\n                },] },\n    ];\n    /** @nocollapse */\n    MD.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    MD.propDecorators = {\n        'md': [{ type: core_1.Input },],\n    };\n    return MD;\n}(index_1.RESPONSIVE_BASE));\nexports.MD = MD;\nvar SM = (function (_super) {\n    __extends(SM, _super);\n    function SM(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'sm';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(SM.prototype, \"sm\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SM.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[sm]'\n                },] },\n    ];\n    /** @nocollapse */\n    SM.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    SM.propDecorators = {\n        'sm': [{ type: core_1.Input },],\n    };\n    return SM;\n}(index_1.RESPONSIVE_BASE));\nexports.SM = SM;\nvar XS = (function (_super) {\n    __extends(XS, _super);\n    function XS(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'xs';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(XS.prototype, \"xs\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    XS.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[xs]'\n                },] },\n    ];\n    /** @nocollapse */\n    XS.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    XS.propDecorators = {\n        'xs': [{ type: core_1.Input },],\n    };\n    return XS;\n}(index_1.RESPONSIVE_BASE));\nexports.XS = XS;\nvar ShowItBootstrap = (function (_super) {\n    __extends(ShowItBootstrap, _super);\n    function ShowItBootstrap(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(ShowItBootstrap.prototype, \"showItBootstrap\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowItBootstrap.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[showItBootstrap]'\n                },] },\n    ];\n    /** @nocollapse */\n    ShowItBootstrap.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ShowItBootstrap.propDecorators = {\n        'showItBootstrap': [{ type: core_1.Input },],\n    };\n    return ShowItBootstrap;\n}(index_1.RESPONSIVE_BASE));\nexports.ShowItBootstrap = ShowItBootstrap;\nvar HideItBootstrap = (function (_super) {\n    __extends(HideItBootstrap, _super);\n    function HideItBootstrap(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(HideItBootstrap.prototype, \"hideItBootstrap\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'bootstrap');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HideItBootstrap.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[hideItBootstrap]'\n                },] },\n    ];\n    /** @nocollapse */\n    HideItBootstrap.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    HideItBootstrap.propDecorators = {\n        'hideItBootstrap': [{ type: core_1.Input },],\n    };\n    return HideItBootstrap;\n}(index_1.RESPONSIVE_BASE));\nexports.HideItBootstrap = HideItBootstrap;\nvar ResponsiveSizeInfo = (function () {\n    function ResponsiveSizeInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.statechanges = new core_1.EventEmitter();\n    }\n    Object.defineProperty(ResponsiveSizeInfo.prototype, \"responsiveSizeInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResponsiveSizeInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.elementoObservar.subscribe(this.updateData.bind(this));\n    };\n    ResponsiveSizeInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    ResponsiveSizeInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this._noRepeat, value);\n        if (update) {\n            this.statechanges.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    ResponsiveSizeInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this._noRepeat = newValue;\n            return true;\n        }\n    };\n    ResponsiveSizeInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'responsiveSizeInfo',\n                    inputs: ['responsiveSizeInfo'],\n                    outputs: ['statechanges']\n                },] },\n    ];\n    /** @nocollapse */\n    ResponsiveSizeInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    return ResponsiveSizeInfo;\n}());\nexports.ResponsiveSizeInfo = ResponsiveSizeInfo;\n//# sourceMappingURL=bootstrap-directives.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/browsers/browsers-directives.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar IsChrome = (function (_super) {\n    __extends(IsChrome, _super);\n    function IsChrome(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'chrome';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsChrome.prototype, \"isChrome\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsChrome.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isChrome]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsChrome.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsChrome.propDecorators = {\n        'isChrome': [{ type: core_1.Input },],\n    };\n    return IsChrome;\n}(index_1.RESPONSIVE_BASE));\nexports.IsChrome = IsChrome;\nvar IsFirefox = (function (_super) {\n    __extends(IsFirefox, _super);\n    function IsFirefox(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'firefox';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsFirefox.prototype, \"isFirefox\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsFirefox.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isFirefox]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsFirefox.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsFirefox.propDecorators = {\n        'isFirefox': [{ type: core_1.Input },],\n    };\n    return IsFirefox;\n}(index_1.RESPONSIVE_BASE));\nexports.IsFirefox = IsFirefox;\nvar IsSafari = (function (_super) {\n    __extends(IsSafari, _super);\n    function IsSafari(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'safari';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsSafari.prototype, \"isSafari\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsSafari.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isSafari]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsSafari.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsSafari.propDecorators = {\n        'isSafari': [{ type: core_1.Input },],\n    };\n    return IsSafari;\n}(index_1.RESPONSIVE_BASE));\nexports.IsSafari = IsSafari;\nvar IsOpera = (function (_super) {\n    __extends(IsOpera, _super);\n    function IsOpera(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'opera';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsOpera.prototype, \"isOpera\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsOpera.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isOpera]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsOpera.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsOpera.propDecorators = {\n        'isOpera': [{ type: core_1.Input },],\n    };\n    return IsOpera;\n}(index_1.RESPONSIVE_BASE));\nexports.IsOpera = IsOpera;\nvar IsIE = (function (_super) {\n    __extends(IsIE, _super);\n    function IsIE(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'ie';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIE.prototype, \"isIE\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIE.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIE]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIE.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIE.propDecorators = {\n        'isIE': [{ type: core_1.Input },],\n    };\n    return IsIE;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIE = IsIE;\nvar ShowItBrowser = (function (_super) {\n    __extends(ShowItBrowser, _super);\n    function ShowItBrowser(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(ShowItBrowser.prototype, \"showItBrowser\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowItBrowser.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[showItBrowser]'\n                },] },\n    ];\n    /** @nocollapse */\n    ShowItBrowser.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ShowItBrowser.propDecorators = {\n        'showItBrowser': [{ type: core_1.Input },],\n    };\n    return ShowItBrowser;\n}(index_1.RESPONSIVE_BASE));\nexports.ShowItBrowser = ShowItBrowser;\nvar HideItBrowser = (function (_super) {\n    __extends(HideItBrowser, _super);\n    function HideItBrowser(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(HideItBrowser.prototype, \"hideItBrowser\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'browser');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HideItBrowser.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[hideItBrowser]',\n                    providers: [index_1.ResponsiveState]\n                },] },\n    ];\n    /** @nocollapse */\n    HideItBrowser.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    HideItBrowser.propDecorators = {\n        'hideItBrowser': [{ type: core_1.Input },],\n    };\n    return HideItBrowser;\n}(index_1.RESPONSIVE_BASE));\nexports.HideItBrowser = HideItBrowser;\nvar IsIE9 = (function (_super) {\n    __extends(IsIE9, _super);\n    function IsIE9(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'ie 9';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIE9.prototype, \"isIE9\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'ie');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIE9.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIE9]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIE9.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIE9.propDecorators = {\n        'isIE9': [{ type: core_1.Input },],\n    };\n    return IsIE9;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIE9 = IsIE9;\nvar IsIE10 = (function (_super) {\n    __extends(IsIE10, _super);\n    function IsIE10(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'ie 10';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIE10.prototype, \"isIE10\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'ie');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIE10.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIE10]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIE10.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIE10.propDecorators = {\n        'isIE10': [{ type: core_1.Input },],\n    };\n    return IsIE10;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIE10 = IsIE10;\nvar IsIE11 = (function (_super) {\n    __extends(IsIE11, _super);\n    function IsIE11(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'ie 11';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIE11.prototype, \"isIE11\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'ie');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIE11.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIE11]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIE11.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIE11.propDecorators = {\n        'isIE11': [{ type: core_1.Input },],\n    };\n    return IsIE11;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIE11 = IsIE11;\nvar IsIE12 = (function (_super) {\n    __extends(IsIE12, _super);\n    function IsIE12(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'ie 12';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIE12.prototype, \"isIE12\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'ie');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIE12.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIE12]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIE12.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIE12.propDecorators = {\n        'isIE12': [{ type: core_1.Input },],\n    };\n    return IsIE12;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIE12 = IsIE12;\nvar ShowIEVersion = (function (_super) {\n    __extends(ShowIEVersion, _super);\n    function ShowIEVersion(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(ShowIEVersion.prototype, \"showIEVersion\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'ie');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowIEVersion.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[showIEVersion]'\n                },] },\n    ];\n    /** @nocollapse */\n    ShowIEVersion.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ShowIEVersion.propDecorators = {\n        'showIEVersion': [{ type: core_1.Input },],\n    };\n    return ShowIEVersion;\n}(index_1.RESPONSIVE_BASE));\nexports.ShowIEVersion = ShowIEVersion;\nvar HideIEVersion = (function (_super) {\n    __extends(HideIEVersion, _super);\n    function HideIEVersion(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(HideIEVersion.prototype, \"hideIEVersion\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'ie');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HideIEVersion.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[hideIEVersion]'\n                },] },\n    ];\n    /** @nocollapse */\n    HideIEVersion.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    HideIEVersion.propDecorators = {\n        'hideIEVersion': [{ type: core_1.Input },],\n    };\n    return HideIEVersion;\n}(index_1.RESPONSIVE_BASE));\nexports.HideIEVersion = HideIEVersion;\nvar BrowserInfo = (function () {\n    function BrowserInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.browser = new core_1.EventEmitter();\n    }\n    Object.defineProperty(BrowserInfo.prototype, \"browserInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.browserObserver.subscribe(this.updateData.bind(this));\n    };\n    BrowserInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    BrowserInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this.noRepeat, value);\n        if (update) {\n            this.browser.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    BrowserInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this.noRepeat = newValue;\n            return true;\n        }\n    };\n    BrowserInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: \"browserInfo\", inputs: ['browserInfo'], outputs: ['browser']\n                },] },\n    ];\n    /** @nocollapse */\n    BrowserInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    return BrowserInfo;\n}());\nexports.BrowserInfo = BrowserInfo;\nvar IeInfo = (function () {\n    function IeInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.ieVersion = new core_1.EventEmitter();\n    }\n    Object.defineProperty(IeInfo.prototype, \"ieInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IeInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.browserObserver.subscribe(this.updateData.bind(this));\n    };\n    IeInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    IeInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this.noRepeat, value);\n        if (update) {\n            this.ieVersion.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    IeInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this.noRepeat = newValue;\n            return true;\n        }\n    };\n    IeInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: \"ieInfo\", inputs: ['ieInfo'], outputs: ['ieVersion']\n                },] },\n    ];\n    /** @nocollapse */\n    IeInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    return IeInfo;\n}());\nexports.IeInfo = IeInfo;\n//# sourceMappingURL=browsers-directives.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/config/config.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nrequire('rxjs/add/operator/share');\nrequire('rxjs/add/operator/debounce');\nvar rxjs_1 = require('rxjs');\nvar const_1 = require('./const');\nvar ResponsiveConfigInterface = (function () {\n    function ResponsiveConfigInterface() {\n    }\n    return ResponsiveConfigInterface;\n}());\nexports.ResponsiveConfigInterface = ResponsiveConfigInterface;\nvar ResponsiveConfig = (function () {\n    function ResponsiveConfig(config) {\n        this.config = {\n            breakPoints: {\n                xs: { max: 767 },\n                sm: { min: 768, max: 991 },\n                md: { min: 992, max: 1199 },\n                lg: { min: 1200, max: 1599 },\n                xl: { min: 1600 }\n            },\n            debounceTime: 100\n        };\n        if (!!config)\n            this.config = config;\n    }\n    ResponsiveConfig.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    ResponsiveConfig.ctorParameters = function () { return [\n        { type: ResponsiveConfigInterface, decorators: [{ type: core_1.Optional },] },\n    ]; };\n    return ResponsiveConfig;\n}());\nexports.ResponsiveConfig = ResponsiveConfig;\nvar ResponsiveState = (function () {\n    function ResponsiveState(responsiveConfig) {\n        var _this = this;\n        this._windows = {};\n        this._screenWidth = window.screen.width;\n        this._screenHeight = window.screen.height;\n        this._orientation = window.orientation;\n        this._userAgent = window.navigator.userAgent.toLowerCase();\n        this._window = window;\n        this._vendor = window.navigator.vendor;\n        this.registerWindow = function (rw) {\n            if (rw.name && !_this._windows[rw.name]) {\n                _this._windows[rw.name] = rw;\n                window.dispatchEvent(new Event('resize'));\n            }\n        };\n        this.unregisterWindow = function (rw) {\n            for (var rwn in _this._windows) {\n                if (_this._windows[rwn] === rw)\n                    delete (_this._windows[rwn]);\n            }\n            window.dispatchEvent(new Event('resize'));\n        };\n        this.sizeObserver = function () {\n            return _this._width = _this.getWidth('window');\n        };\n        this.sizeOperations = function () {\n            _this._width = _this.getWidth('window');\n            try {\n                var breakpoints = _this._responsiveConfig.config.breakPoints;\n                if (breakpoints.xl.min <= _this._width)\n                    return 'xl';\n                else if (breakpoints.lg.max >= _this._width && breakpoints.lg.min <= _this._width)\n                    return 'lg';\n                else if (breakpoints.md.max >= _this._width && breakpoints.md.min <= _this._width)\n                    return 'md';\n                else if (breakpoints.sm.max >= _this._width && breakpoints.sm.min <= _this._width)\n                    return 'sm';\n                else if (breakpoints.xs.max >= _this._width)\n                    return 'xs';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.browserName = function () {\n            try {\n                if (const_1.REG_SORT_NAMES.WEBKIT[0].test(_this._userAgent) && const_1.REG_SORT_NAMES.CHROME.test(_this._userAgent) && !const_1.REG_BROWSERS.IE[2].test(_this._userAgent))\n                    return 'chrome';\n                else if (const_1.REG_SORT_NAMES.MOZILLA.test(_this._userAgent) && const_1.REG_BROWSERS.FIREFOX.test(_this._userAgent))\n                    return 'firefox';\n                else if (const_1.REG_BROWSERS.IE[0].test(_this._userAgent) || const_1.REG_BROWSERS.IE[1].test(_this._userAgent) || const_1.REG_BROWSERS.IE[2].test(_this._userAgent))\n                    return 'ie';\n                else if (const_1.REG_SORT_NAMES.SAFARI.test(_this._userAgent) && const_1.REG_SORT_NAMES.WEBKIT[1].test(_this._userAgent) && !const_1.REG_SORT_NAMES.CHROME.test(_this._userAgent))\n                    return 'safari';\n                else if (const_1.REG_BROWSERS.OPERA.test(_this._userAgent))\n                    return 'opera';\n                else if (const_1.REG_BROWSERS.SILK.test(_this._userAgent))\n                    return 'silk';\n                else if (const_1.REG_BROWSERS.YANDEX.test(_this._userAgent))\n                    return 'yandex';\n                else\n                    return 'NA';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.ie_version_detect = function () {\n            try {\n                var msie = _this._userAgent.indexOf('msie ');\n                if (const_1.REG_BROWSERS.IE[0].test(_this._userAgent)) {\n                    var ie_version = parseInt(_this._userAgent.substring(msie + 5, _this._userAgent.indexOf('.', msie)), 10);\n                    if (ie_version === 7)\n                        return 'ie 7';\n                    else if (ie_version === 8)\n                        return 'ie 8';\n                    else if (ie_version === 9)\n                        return 'ie 9';\n                    else if (ie_version == 10)\n                        return 'ie 10';\n                    return null;\n                }\n                var trident = _this._userAgent.indexOf('trident/');\n                if (const_1.REG_BROWSERS.IE[1].test(_this._userAgent)) {\n                    var rv = _this._userAgent.indexOf('rv:');\n                    var ie_version = parseInt(_this._userAgent.substring(rv + 3, _this._userAgent.indexOf('.', rv)), 10);\n                    if (ie_version == 11)\n                        return 'ie 11';\n                    return null;\n                }\n                var edge = _this._userAgent.indexOf('Edge/');\n                if (const_1.REG_BROWSERS.IE[2].test(_this._userAgent))\n                    return 'ie +12';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.pixel_ratio = function () {\n            try {\n                if (_this.test_Is_4k())\n                    return '4k';\n                else if (_this.getDevicePixelRatio() > 1)\n                    return 'retina';\n                else if (_this.getDevicePixelRatio() === 1)\n                    return '1x';\n                else\n                    return null;\n            }\n            catch (e) { }\n            return null;\n        };\n        this.device_detection = function () {\n            try {\n                if (_this.isMobile())\n                    return 'mobile';\n                else if (_this.isTablet())\n                    return 'tablet';\n                else if (_this.isSMART())\n                    return 'smarttv';\n                else if (_this.isDesktop())\n                    return 'desktop';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.orientation_device = function () {\n            try {\n                if (_this.isMobile() || _this.isTablet()) {\n                    if (window.innerHeight > window.innerWidth)\n                        return 'portrait';\n                    else\n                        return 'landscape';\n                }\n                else if (_this.isSMART() || _this.isDesktop())\n                    return 'landscape';\n                else\n                    return null;\n            }\n            catch (e) { }\n            return null;\n        };\n        this.standard_devices = function () {\n            try {\n                if (const_1.REG_MOBILES.IPHONE.test(_this._userAgent))\n                    return 'iphone';\n                else if (const_1.REG_TABLETS.IPAD.test(_this._userAgent))\n                    return 'ipad';\n                else if (_this.isMobile() && const_1.REG_MOBILES.ANDROID.test(_this._userAgent))\n                    return 'android mobile';\n                else if (_this.isTablet() && const_1.REG_MOBILES.ANDROID.test(_this._userAgent))\n                    return 'android tablet';\n                else if (const_1.REG_MOBILES.WINDOWS_PHONE.test(_this._userAgent))\n                    return 'windows phone';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.game_devices = function () {\n            try {\n                if (const_1.REG_GAME_DEVICES.PS4.test(_this._userAgent))\n                    return 'Playstation 4';\n                else if (const_1.REG_GAME_DEVICES.PS3.test(_this._userAgent))\n                    return 'Playstation 3';\n                else if (const_1.REG_GAME_DEVICES.XBOX_ONE.test(_this._userAgent))\n                    return 'Xbox one';\n                else if (const_1.REG_GAME_DEVICES.XBOX.test(_this._userAgent))\n                    return 'Xbox';\n                else if (const_1.REG_GAME_DEVICES.WII.test(_this._userAgent))\n                    return 'Wii';\n                else if (const_1.REG_GAME_DEVICES.WII_U.test(_this._userAgent))\n                    return 'Wii U';\n                else if (const_1.REG_GAME_DEVICES.NINTENDO_3DS.test(_this._userAgent))\n                    return 'Nintendo 3DS';\n                else if (const_1.REG_GAME_DEVICES.PS_VITA.test(_this._userAgent))\n                    return 'Playstation Vita';\n                else if (const_1.REG_GAME_DEVICES.PSP.test(_this._userAgent))\n                    return 'PSP';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.smart_tv = function () {\n            try {\n                if (const_1.REG_SMARTS_TV.CHROMECAST.test(_this._userAgent))\n                    return 'Chromecast';\n                else if (const_1.REG_SMARTS_TV.APPLE_TV.test(_this._userAgent))\n                    return 'Apple tv';\n                else if (const_1.REG_SMARTS_TV.GOOGLE_TV.test(_this._userAgent))\n                    return 'Google tv';\n                else if (const_1.REG_GAME_DEVICES.XBOX_ONE.test(_this._userAgent))\n                    return 'Xbox One';\n                else if (const_1.REG_GAME_DEVICES.PS4.test(_this._userAgent))\n                    return 'Playstation 4';\n                else if (const_1.REG_SMARTS_TV.GENERIC_TV.test(_this._userAgent))\n                    return 'Generic smartv';\n            }\n            catch (e) { }\n            return null;\n        };\n        this.desktop = function () {\n            try {\n                if (_this.isDesktop()) {\n                    if (const_1.REG_OS.WINDOWS.test(_this._userAgent))\n                        return 'Windows';\n                    else if (const_1.REG_OS.MAC_OS.test(_this._userAgent))\n                        return 'Mac';\n                    else if (const_1.REG_OS.LINUX.test(_this._userAgent))\n                        return 'Linux';\n                }\n            }\n            catch (e) { }\n            return null;\n        };\n        this.tablet = function () {\n            try {\n                if (_this.isTablet()) {\n                    if (const_1.REG_TABLETS.IPAD.test(_this._userAgent))\n                        return 'Ipad';\n                    else if (const_1.REG_TABLETS.TABLET.test(_this._userAgent) && const_1.REG_MOBILES.ANDROID.test(_this._userAgent))\n                        return 'Android';\n                    else if (const_1.REG_TABLETS.KINDLE.test(_this._userAgent))\n                        return 'Kindle';\n                    else if (const_1.REG_TABLETS.TABLET.test(_this._userAgent))\n                        return 'Generic Tablet';\n                }\n            }\n            catch (e) { }\n            return null;\n        };\n        this.mobile = function () {\n            try {\n                if (_this.isMobile()) {\n                    if (const_1.REG_MOBILES.IPHONE.test(_this._userAgent))\n                        return 'Iphone';\n                    else if (const_1.REG_MOBILES.ANDROID.test(_this._userAgent))\n                        return 'Android';\n                    else if (const_1.REG_MOBILES.WINDOWS_PHONE.test(_this._userAgent))\n                        return 'Windows Phone';\n                    else if (const_1.REG_MOBILES.BLACKBERRY.test(_this._userAgent) || const_1.REG_MOBILES.BB10.test(_this._userAgent))\n                        return 'Blackberry';\n                    else\n                        return 'Generic Mobile';\n                }\n            }\n            catch (e) { }\n            return null;\n        };\n        this.windows = function () {\n            try {\n                if (_this.isDesktop() && _this.isWindows()) {\n                    if (const_1.WINDOWS_OS_VERSION.WINDOWS_XP.test(_this._userAgent))\n                        return 'Windows XP';\n                    else if (const_1.WINDOWS_OS_VERSION.WINDOWS_VISTA.test(_this._userAgent))\n                        return 'Windows Vista';\n                    else if (const_1.WINDOWS_OS_VERSION.WINDOWS_7.test(_this._userAgent))\n                        return 'Windows 7';\n                    else if (const_1.WINDOWS_OS_VERSION.WINDOWS_8.test(_this._userAgent) || const_1.WINDOWS_OS_VERSION.WINDOWS_8_1.test(_this._userAgent))\n                        return 'Windows 8';\n                    else if (const_1.WINDOWS_OS_VERSION.WINDOWS_10.test(_this._userAgent))\n                        return 'Windows 10';\n                    else\n                        return 'Generic Windows';\n                }\n            }\n            catch (e) { }\n            return null;\n        };\n        this.linux = function () {\n            try {\n                if (_this.isDesktop() && _this.isLinux()) {\n                    if (const_1.LINUX_OS.DEBIAN.test(_this._userAgent))\n                        return 'Debian';\n                    else if (const_1.LINUX_OS.KNOPPIX.test(_this._userAgent))\n                        return 'Knoppix';\n                    else if (const_1.LINUX_OS.MINT.test(_this._userAgent))\n                        return 'Mint';\n                    else if (const_1.LINUX_OS.UBUNTU.test(_this._userAgent))\n                        return 'Ubuntu';\n                    else if (const_1.LINUX_OS.KUBUNTU.test(_this._userAgent))\n                        return 'Kubuntu';\n                    else if (const_1.LINUX_OS.XUBUNTU.test(_this._userAgent))\n                        return 'Xubuntu';\n                    else if (const_1.LINUX_OS.LUBUNTU.test(_this._userAgent))\n                        return 'Lubuntu';\n                    else if (const_1.LINUX_OS.FEDORA.test(_this._userAgent))\n                        return 'Fedora';\n                    else if (const_1.LINUX_OS.RED_HAT.test(_this._userAgent))\n                        return 'Red hat';\n                    else if (const_1.LINUX_OS.MANDRIVA.test(_this._userAgent))\n                        return 'Mandriva';\n                    else if (const_1.LINUX_OS.GENTOO.test(_this._userAgent))\n                        return 'Gentoo';\n                    else if (const_1.LINUX_OS.SABAYON.test(_this._userAgent))\n                        return 'Sabayon';\n                    else if (const_1.LINUX_OS.SLACKWARE.test(_this._userAgent))\n                        return 'Slackware';\n                    else if (const_1.LINUX_OS.SUSE.test(_this._userAgent))\n                        return 'Suse';\n                    else if (const_1.LINUX_OS.CENT_OS.test(_this._userAgent))\n                        return 'CentOS';\n                    else if (const_1.LINUX_OS.BACKTRACK.test(_this._userAgent))\n                        return 'Backtrack';\n                    else\n                        return 'Generic Linux';\n                }\n            }\n            catch (e) { }\n            return null;\n        };\n        this.userAgent_data = function () {\n            var ie_version_name = '';\n            var ie_version_state = false;\n            var game_device_name = '';\n            var smart_tv_name = '';\n            var desktop_name = '';\n            var tablet_name = '';\n            var mobile_name = '';\n            var windows_name = '';\n            var linux_name = '';\n            if (_this.ie_version_detect() != null) {\n                ie_version_name = _this.ie_version_detect();\n                ie_version_state = true;\n            }\n            if (_this.isGameDevice()) {\n                game_device_name = _this.game_devices();\n            }\n            if (_this.isSMART()) {\n                smart_tv_name = _this.smart_tv();\n            }\n            if (_this.isDesktop()) {\n                desktop_name = _this.desktop();\n            }\n            if (_this.isTablet()) {\n                tablet_name = _this.tablet();\n            }\n            if (_this.isMobile()) {\n                mobile_name = _this.mobile();\n            }\n            if (_this.isWindows()) {\n                windows_name = _this.windows();\n            }\n            if (_this.isLinux()) {\n                linux_name = _this.linux();\n            }\n            return {\n                device: _this.device_detection(),\n                browser: _this.browserName(),\n                pixelratio: _this.pixel_ratio(),\n                ie_version: {\n                    name: ie_version_name,\n                    state: ie_version_state\n                },\n                game_device: {\n                    name: game_device_name,\n                    state: _this.isGameDevice()\n                },\n                smart_tv: {\n                    name: smart_tv_name,\n                    state: _this.isSMART()\n                },\n                desktop: {\n                    name: desktop_name,\n                    state: _this.isDesktop()\n                },\n                tablet: {\n                    name: tablet_name,\n                    state: _this.isTablet()\n                },\n                mobile: {\n                    name: mobile_name,\n                    state: _this.isMobile()\n                },\n                window_os: {\n                    name: windows_name,\n                    state: _this.isWindows()\n                },\n                linux_os: {\n                    name: linux_name,\n                    state: _this.isLinux()\n                },\n                bot: _this.isBot()\n            };\n        };\n        this._responsiveConfig = !!responsiveConfig ? responsiveConfig : new ResponsiveConfig();\n        var resize_observer = rxjs_1.Observable\n            .fromEvent(window, 'resize')\n            .debounceTime(this._responsiveConfig.config.debounceTime)\n            .defaultIfEmpty()\n            .startWith(this.getWidth('window'));\n        var pixel_ratio_observer = rxjs_1.Observable\n            .fromEvent(window, 'onload')\n            .defaultIfEmpty()\n            .startWith(this.getDevicePixelRatio());\n        var device_observer = rxjs_1.Observable\n            .fromEvent(window, 'onload')\n            .defaultIfEmpty()\n            .startWith(this.getUserAgent());\n        var user_agent_observer = rxjs_1.Observable.fromEvent(window, 'onload')\n            .defaultIfEmpty()\n            .startWith(this.userAgent_data());\n        var orientation_observer = rxjs_1.Observable\n            .fromEvent(window, 'orientationchange')\n            .defaultIfEmpty()\n            .startWith(this.getOrientation());\n        this.elementoObservar = resize_observer.map(this.sizeOperations);\n        this.anchoObservar = resize_observer.map(this.sizeObserver);\n        this.browserObserver = device_observer.map(this.browserName);\n        this.pixelObserver = pixel_ratio_observer.map(this.pixel_ratio);\n        this.deviceObserver = device_observer.map(this.device_detection);\n        this.orientationObserver = orientation_observer.map(this.orientation_device);\n        this.standardObserver = device_observer.map(this.standard_devices);\n        this.ieVersionObserver = device_observer.map(this.ie_version_detect);\n        this.userAgentObserver = user_agent_observer.map(this.userAgent_data);\n    }\n    ResponsiveState.prototype.getWidth = function (windowName) {\n        if (windowName && this._windows[windowName])\n            return this._windows[windowName].getWidth();\n        else\n            return window.innerWidth;\n    };\n    ResponsiveState.prototype.test_Is_4k = function () {\n        return ((this._screenHeight < this._screenWidth) ? (this._screenWidth > 3839) : (this._screenHeight > 3839));\n    };\n    ResponsiveState.prototype.getDevicePixelRatio = function () {\n        var ratio = 1;\n        if (typeof window.screen.systemXDPI !== 'undefined' && typeof window.screen.logicalXDPI !== 'undefined' && window.screen.systemXDPI > window.screen.logicalXDPI)\n            ratio = window.screen.systemXDPI / window.screen.logicalXDPI;\n        else if (typeof window.devicePixelRatio !== 'undefined')\n            ratio = window.devicePixelRatio;\n        return ratio;\n    };\n    ResponsiveState.prototype.isMobile = function () {\n        if (const_1.REG_MOBILES.GENERIC_REG[0].test(this._userAgent) && this.isTablet() == false ||\n            const_1.REG_MOBILES.GENERIC_REG[1].test(this._userAgent.substr(0, 4)) && this.isTablet() == false)\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isTablet = function () {\n        if (const_1.REG_TABLETS.IPAD.test(this._userAgent) || const_1.REG_TABLETS.KINDLE.test(this._userAgent) || const_1.REG_TABLETS.PLAYBOOK[0].test(this._userAgent) || const_1.REG_TABLETS.PLAYBOOK[1].test(this._userAgent) || const_1.REG_TABLETS.TABLET.test(this._userAgent))\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isSMART = function () {\n        if (const_1.REG_SMARTS_TV.GENERIC_TV.test(this._userAgent) || const_1.REG_SMARTS_TV.PS4.test(this._userAgent) || const_1.REG_SMARTS_TV.XBOX_ONE.test(this._userAgent))\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isDesktop = function () {\n        if (!this.isMobile() || !this.isTablet() || !this.isSMART())\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isGameDevice = function () {\n        if (const_1.REG_GAME_DEVICES.PS4.test(this._userAgent) || const_1.REG_GAME_DEVICES.PS3.test(this._userAgent)\n            || const_1.REG_GAME_DEVICES.XBOX.test(this._userAgent) || const_1.REG_GAME_DEVICES.XBOX_ONE.test(this._userAgent)\n            || const_1.REG_GAME_DEVICES.WII.test(this._userAgent) || const_1.REG_GAME_DEVICES.WII_U.test(this._userAgent)\n            || const_1.REG_GAME_DEVICES.NINTENDO_3DS.test(this._userAgent) || const_1.REG_GAME_DEVICES.PS_VITA.test(this._userAgent)\n            || const_1.REG_GAME_DEVICES.PSP.test(this._userAgent))\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isWindows = function () {\n        if (const_1.REG_OS.WINDOWS.test(this._userAgent))\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isLinux = function () {\n        if (const_1.REG_OS.LINUX.test(this._userAgent))\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.isBot = function () {\n        if (const_1.REG_BOTS.GENERIC_BOT.test(this._userAgent))\n            return true;\n        else\n            return false;\n    };\n    ResponsiveState.prototype.getUserAgent = function () {\n        return window.navigator.userAgent.toLowerCase();\n    };\n    ResponsiveState.prototype.getOrientation = function () {\n        return window.orientation;\n    };\n    ResponsiveState.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    ResponsiveState.ctorParameters = function () { return [\n        { type: ResponsiveConfig, decorators: [{ type: core_1.Optional },] },\n    ]; };\n    return ResponsiveState;\n}());\nexports.ResponsiveState = ResponsiveState;\n//# sourceMappingURL=config.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/config/const.js":"\"use strict\";\nexports.GLOBAL_INPUTS = {\n    BOOTSTRAP: ['xs', 'sm', 'md', 'lg', 'xl'],\n    DEVICES: ['mobile', 'tablet', 'smarttv', 'desktop'],\n    STANDARD: ['iphone', 'ipad', 'android mobile', 'android tablet', 'windows phone'],\n    ORIENTATION: ['portrait', 'landscape'],\n    BROWSERS: ['chrome', 'firefox', 'ie', 'safari', 'opera'],\n    PIXEL_RATIO: ['1x', 'retina', '4k'],\n    IE_VERSIONS: ['ie 9', 'ie 10', 'ie 11', 'ie +12']\n};\nexports.REG_WEARABLES = {\n    IWATCH: ''\n};\nexports.REG_MOBILES = {\n    ANDROID: /(android);?[\\s\\/]+([\\d.]+)?/,\n    IPHONE: /(iphone\\sos)\\s([\\d_]+)/,\n    WINDOWS_PHONE: /windows phone ([\\d.]+)/,\n    BLACKBERRY: /(blackBerry).*version\\/([\\d.]+)/,\n    BB10: /(bb10).*version\\/([\\d.]+)/,\n    WEB_OS: /(webos|hpwos)[\\s\\/]([\\d.]+)/,\n    IPOD: /(ipod)(.*os\\s([\\d_]+))?/,\n    FIREFOX_OS: /\\((?:mobile|tablet); rv:([\\d.]+)\\).*firefox\\/[\\d.]+/,\n    MOBI: /[^-]mobi/i,\n    GENERIC_REG: [/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i, /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i]\n};\nexports.REG_TABLETS = {\n    IPAD: /(ipad).*os\\s([\\d_]+)/,\n    KINDLE: /kindle|silk|kfapw|kfarwi|kfaswi|kffowi|kfjw|kfmewi|kfot|kfsaw|kfsowi|kftbw|kfthw|kftt|wffowi/i,\n    TABLET: /tablet/i,\n    PLAYBOOK: [/rim\\stablet/i, /playbook/i]\n};\nexports.REG_SMARTS_TV = {\n    CHROMECAST: /crkey/i,\n    APPLE_TV: /appletv/i,\n    GOOGLE_TV: /(large screen)|googletv/i,\n    PS4: /playstation 4/i,\n    XBOX_ONE: /xbox one/i,\n    GENERIC_TV: /tv|smarttv|googletv|crkey|Sharp|THOMSON|THOM|Panasonic|Philips|NETTV|Maple_2011|appletv|Humax|Ikea|Loewe|Medion|hbbtv|pov_tv|Airties|netcast.tv|OWB|Grundig|Arcelik/i\n};\nexports.REG_GAME_DEVICES = {\n    PS4: /playstation 4/i,\n    PS3: /playstation 3/i,\n    XBOX: /xbox one/i,\n    XBOX_ONE: /xbox/i,\n    WII_U: /nintendo wiiu/i,\n    WII: /nintendo wii/i,\n    PS_VITA: /playstation vita/i,\n    NINTENDO_3DS: /nintendo 3ds/i,\n    PSP: /psp/i\n};\nexports.REG_BROWSERS = {\n    CHROME: [/chrome\\/([\\d.]+)/, /crios\\/([\\d.]+)/],\n    FIREFOX: /firefox|iceweasel|fxios/i,\n    WEB_VIEW: /(iphone|ipod|ipad).*applewebkit(?!.*safari)/,\n    SAFARI: /version\\/([\\d.]+)([^s](safari)|[^m]*(mobile)[^S]*(safari))/,\n    OPERA: /opera|opr|opios/i,\n    IE: [/msie/, /trident/, /edge/],\n    MS_EDGE: /edge/,\n    SILK: /silk/i,\n    YANDEX: /yabrowser/i\n};\nexports.REG_OS = {\n    WINDOWS: /win\\d{2}|windows/,\n    IOS: /(ipod|iphone|ipad)/i,\n    MAC_OS: /macintosh/i,\n    ANDROID: /android/i,\n    LINUX: /linux/i,\n    FIREFOX_OS: /\\((?:mobile|tablet); rv:([\\d.]+)\\).*firefox\\/[\\d.]+/,\n    CHROME_OS: /cros/,\n    WINDOWS_PHONE: /windows phone/i\n};\nexports.REG_SORT_NAMES = {\n    MOZILLA: /mozilla/,\n    CHROME: /chrome/,\n    WEBKIT: [/webkit/, /applewebkit/],\n    SAFARI: /safari/\n};\nexports.WINDOWS_OS_VERSION = {\n    WINDOWS_3_11: /win16/,\n    WINDOWS_95: /(windows 95|win95|windows_95)/,\n    WINDOWS_ME: /(win 9x 4.90|windows ME)/,\n    WINDOWS_98: /(windows 98|win98)/,\n    WINDOWS_CE: /windows ce/,\n    WINDOWS_2000: /(windows nt 5.0|windows 2000)/,\n    WINDOWS_XP: /(windows nt 5.1|windows xp)/,\n    WINDOWS_SERVER_2003: /windows nt 5.2/,\n    WINDOWS_VISTA: /windows nt 6.0|Windows Vista/,\n    WINDOWS_7: /(windows 7|windows nt 6.1)/,\n    WINDOWS_8_1: /(windows 8.1|windows nt 6.3)/,\n    WINDOWS_8: /(windows 8|windows nt 6.2)/,\n    WINDOWS_10: /(windows nt 10.0)/,\n    WINDOWS_PHONE_7_5: /(windows phone os 7.5)/,\n    WINDOWS_PHONE_8_1: /(windows phone 8.1)/,\n    WINDOWS_PHONE_10: /(windows phone 10)/,\n    WINDOWS_NT_4_0: /(windows nt 4.0|winnt4.0|winnt|windows nt)/\n};\nexports.MAC_OS_VERSION = {\n    MAC_OS: ''\n};\nexports.LINUX_OS = {\n    DEBIAN: /Debian/i,\n    KNOPPIX: /Knoppix/i,\n    MINT: /Mint/i,\n    UBUNTU: /Ubuntu/i,\n    KUBUNTU: /Kubuntu/i,\n    XUBUNTU: /Xubuntu/i,\n    LUBUNTU: /Lubuntu/i,\n    FEDORA: /Fedora/i,\n    RED_HAT: /Red Hat/i,\n    MANDRIVA: /Mandriva/i,\n    GENTOO: /Gentoo/i,\n    SABAYON: /Sabayon/i,\n    SLACKWARE: /Slackware/i,\n    SUSE: /SUSE/i,\n    CENT_OS: /CentOS/i,\n    BACKTRACK: /BackTrack/i\n};\nexports.REG_BOTS = {\n    GENERIC_BOT: /bot|googlebot|crawler|spider|robot|crawling/i\n};\n//# sourceMappingURL=const.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/config/interfaces.js":"\"use strict\";\n//# sourceMappingURL=interfaces.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/config/responsive-base.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar RESPONSIVE_BASE = (function () {\n    function RESPONSIVE_BASE(templateRef, viewContainer, _responsiveState, cd) {\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n        this._responsiveState = _responsiveState;\n        this.cd = cd;\n        this._noRepeat = 0;\n        this.set_active_subscriptions = {\n            bootstrap: false,\n            browser: false,\n            device: false,\n            pixelratio: false,\n            orientation: false,\n            standard: false,\n            ie: false,\n            sizes: false\n        };\n        this.eventChanges = new core_1.EventEmitter();\n    }\n    RESPONSIVE_BASE.prototype.setGrid = function (grid_state, directive) {\n        switch (directive) {\n            case 'bootstrap':\n                this.set_active_subscriptions.bootstrap = true;\n                break;\n            case 'device':\n                this.set_active_subscriptions.device = true;\n                break;\n            case 'standard':\n                this.set_active_subscriptions.standard = true;\n                break;\n            case 'orientation':\n                this.set_active_subscriptions.orientation = true;\n                break;\n            case 'browser':\n                this.set_active_subscriptions.browser = true;\n                break;\n            case 'pixelratio':\n                this.set_active_subscriptions.pixelratio = true;\n                break;\n            case 'ie':\n                this.set_active_subscriptions.ie = true;\n                break;\n            case 'sizes':\n                this.set_active_subscriptions.sizes = true;\n                break;\n            default:\n                null;\n        }\n        if (directive === 'sizes')\n            this._sizes_grid_state = grid_state;\n        else\n            this._others_grid_state = (Array.isArray(grid_state) ? grid_state : [grid_state]);\n        this._directive = directive;\n    };\n    RESPONSIVE_BASE.prototype.ngOnInit = function () {\n        if (this.set_active_subscriptions.bootstrap)\n            this._subscription_Bootstrap = this._responsiveState.elementoObservar.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.bootstrap)\n            this._subscription_Bootstrap = this._responsiveState.elementoObservar.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.browser)\n            this._subscription_Browser = this._responsiveState.browserObserver.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.device)\n            this._subscription_Device = this._responsiveState.deviceObserver.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.pixelratio)\n            this._subscription_Pixel_Ratio = this._responsiveState.pixelObserver.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.orientation)\n            this._subscription_Orientation = this._responsiveState.orientationObserver.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.standard)\n            this._subscription_Standard = this._responsiveState.standardObserver.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.ie)\n            this._subscription_IE_Version = this._responsiveState.ieVersionObserver.subscribe(this.updateView.bind(this));\n        if (this.set_active_subscriptions.sizes)\n            this._subscription_custom_sizes = this._responsiveState.anchoObservar.subscribe(this.updateView.bind(this));\n    };\n    RESPONSIVE_BASE.prototype.ngOnDestroy = function () {\n        if (this.set_active_subscriptions.bootstrap)\n            this._subscription_Bootstrap.unsubscribe();\n        if (this.set_active_subscriptions.browser)\n            this._subscription_Browser.unsubscribe();\n        if (this.set_active_subscriptions.device)\n            this._subscription_Device.unsubscribe();\n        if (this.set_active_subscriptions.pixelratio)\n            this._subscription_Pixel_Ratio.unsubscribe();\n        if (this.set_active_subscriptions.orientation)\n            this._subscription_Orientation.unsubscribe();\n        if (this.set_active_subscriptions.standard)\n            this._subscription_Standard.unsubscribe();\n        if (this.set_active_subscriptions.ie)\n            this._subscription_IE_Version.unsubscribe();\n        if (this.set_active_subscriptions.sizes)\n            this._subscription_custom_sizes.unsubscribe();\n    };\n    RESPONSIVE_BASE.prototype.showHide = function (show) {\n        if (!!show) {\n            if (this._noRepeat === 0) {\n                this._noRepeat = 1;\n                this.eventChanges.emit(true);\n                this.viewContainer.createEmbeddedView(this.templateRef);\n                this.cd.markForCheck();\n            }\n        }\n        else {\n            this._noRepeat = 0;\n            this.eventChanges.emit(false);\n            this.viewContainer.clear();\n            this.cd.markForCheck();\n        }\n    };\n    RESPONSIVE_BASE.prototype.updateView = function (value) {\n        var showBoolean = this._directive === 'sizes' ?\n            !!((typeof this._sizes_grid_state.min === 'undefined' || value >= this._sizes_grid_state.min) &&\n                (typeof this._sizes_grid_state.max === 'undefined' || value <= this._sizes_grid_state.max)) :\n            !!this._others_grid_state && this._others_grid_state.indexOf(value) !== -1;\n        this.showHide(!!this._showWhenTrue ? showBoolean : !showBoolean);\n    };\n    return RESPONSIVE_BASE;\n}());\nexports.RESPONSIVE_BASE = RESPONSIVE_BASE;\n//# sourceMappingURL=responsive-base.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/custom-sizes/custom-sizes-directives.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar ShowItSizes = (function (_super) {\n    __extends(ShowItSizes, _super);\n    function ShowItSizes(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(ShowItSizes.prototype, \"showItSizes\", {\n        set: function (_grid_state) {\n            this.setGrid(_grid_state, 'sizes');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowItSizes.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[showItSizes]'\n                },] },\n    ];\n    /** @nocollapse */\n    ShowItSizes.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ShowItSizes.propDecorators = {\n        'showItSizes': [{ type: core_1.Input },],\n    };\n    return ShowItSizes;\n}(index_1.RESPONSIVE_BASE));\nexports.ShowItSizes = ShowItSizes;\nvar HideItSizes = (function (_super) {\n    __extends(HideItSizes, _super);\n    function HideItSizes(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(HideItSizes.prototype, \"hideItSizes\", {\n        set: function (_grid_state) {\n            this.setGrid(_grid_state, 'sizes');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HideItSizes.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[hideItSizes]'\n                },] },\n    ];\n    /** @nocollapse */\n    HideItSizes.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    HideItSizes.propDecorators = {\n        'hideItSizes': [{ type: core_1.Input },],\n    };\n    return HideItSizes;\n}(index_1.RESPONSIVE_BASE));\nexports.HideItSizes = HideItSizes;\n//# sourceMappingURL=custom-sizes-directives.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/devices/devices-directives.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar IsSmartTv = (function (_super) {\n    __extends(IsSmartTv, _super);\n    function IsSmartTv(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'smarttv';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsSmartTv.prototype, \"isSmartTv\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'device');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsSmartTv.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isSmartTv]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsSmartTv.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsSmartTv.propDecorators = {\n        'isSmartTv': [{ type: core_1.Input },],\n    };\n    return IsSmartTv;\n}(index_1.RESPONSIVE_BASE));\nexports.IsSmartTv = IsSmartTv;\nvar IsDesktop = (function (_super) {\n    __extends(IsDesktop, _super);\n    function IsDesktop(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'desktop';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsDesktop.prototype, \"isDesktop\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'device');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsDesktop.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isDesktop]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsDesktop.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsDesktop.propDecorators = {\n        'isDesktop': [{ type: core_1.Input },],\n    };\n    return IsDesktop;\n}(index_1.RESPONSIVE_BASE));\nexports.IsDesktop = IsDesktop;\nvar IsTablet = (function (_super) {\n    __extends(IsTablet, _super);\n    function IsTablet(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'tablet';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsTablet.prototype, \"isTablet\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'device');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsTablet.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isTablet]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsTablet.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsTablet.propDecorators = {\n        'isTablet': [{ type: core_1.Input },],\n    };\n    return IsTablet;\n}(index_1.RESPONSIVE_BASE));\nexports.IsTablet = IsTablet;\nvar IsMobile = (function (_super) {\n    __extends(IsMobile, _super);\n    function IsMobile(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'mobile';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsMobile.prototype, \"isMobile\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'device');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsMobile.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isMobile]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsMobile.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsMobile.propDecorators = {\n        'isMobile': [{ type: core_1.Input },],\n    };\n    return IsMobile;\n}(index_1.RESPONSIVE_BASE));\nexports.IsMobile = IsMobile;\nvar ShowItDevice = (function (_super) {\n    __extends(ShowItDevice, _super);\n    function ShowItDevice(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(ShowItDevice.prototype, \"showItDevice\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'device');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowItDevice.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[showItDevice]'\n                },] },\n    ];\n    /** @nocollapse */\n    ShowItDevice.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ShowItDevice.propDecorators = {\n        'showItDevice': [{ type: core_1.Input },],\n    };\n    return ShowItDevice;\n}(index_1.RESPONSIVE_BASE));\nexports.ShowItDevice = ShowItDevice;\nvar HideItDevice = (function (_super) {\n    __extends(HideItDevice, _super);\n    function HideItDevice(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(HideItDevice.prototype, \"hideItDevice\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'device');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HideItDevice.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[hideItDevice]'\n                },] },\n    ];\n    /** @nocollapse */\n    HideItDevice.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    HideItDevice.propDecorators = {\n        'hideItDevice': [{ type: core_1.Input },],\n    };\n    return HideItDevice;\n}(index_1.RESPONSIVE_BASE));\nexports.HideItDevice = HideItDevice;\nvar IsIphone = (function (_super) {\n    __extends(IsIphone, _super);\n    function IsIphone(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'iphone';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIphone.prototype, \"isIphone\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIphone.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIphone]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIphone.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIphone.propDecorators = {\n        'isIphone': [{ type: core_1.Input },],\n    };\n    return IsIphone;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIphone = IsIphone;\nvar IsIpad = (function (_super) {\n    __extends(IsIpad, _super);\n    function IsIpad(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'iphone';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsIpad.prototype, \"isIphone\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsIpad.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isIpad]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsIpad.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsIpad.propDecorators = {\n        'isIphone': [{ type: core_1.Input },],\n    };\n    return IsIpad;\n}(index_1.RESPONSIVE_BASE));\nexports.IsIpad = IsIpad;\nvar IsAndroidMobile = (function (_super) {\n    __extends(IsAndroidMobile, _super);\n    function IsAndroidMobile(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'android mobile';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsAndroidMobile.prototype, \"isAndroidMobile\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsAndroidMobile.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isAndroidMobile]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsAndroidMobile.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsAndroidMobile.propDecorators = {\n        'isAndroidMobile': [{ type: core_1.Input },],\n    };\n    return IsAndroidMobile;\n}(index_1.RESPONSIVE_BASE));\nexports.IsAndroidMobile = IsAndroidMobile;\nvar IsAndroidTablet = (function (_super) {\n    __extends(IsAndroidTablet, _super);\n    function IsAndroidTablet(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'android tablet';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsAndroidTablet.prototype, \"isAndroidTablet\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsAndroidTablet.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isAndroidTablet]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsAndroidTablet.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsAndroidTablet.propDecorators = {\n        'isAndroidTablet': [{ type: core_1.Input },],\n    };\n    return IsAndroidTablet;\n}(index_1.RESPONSIVE_BASE));\nexports.IsAndroidTablet = IsAndroidTablet;\nvar IsWindowsPhone = (function (_super) {\n    __extends(IsWindowsPhone, _super);\n    function IsWindowsPhone(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'windows phone';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsWindowsPhone.prototype, \"isWindowsPhone\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsWindowsPhone.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isWindowsPhone]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsWindowsPhone.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsWindowsPhone.propDecorators = {\n        'isWindowsPhone': [{ type: core_1.Input },],\n    };\n    return IsWindowsPhone;\n}(index_1.RESPONSIVE_BASE));\nexports.IsWindowsPhone = IsWindowsPhone;\nvar ShowItStandard = (function (_super) {\n    __extends(ShowItStandard, _super);\n    function ShowItStandard(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(ShowItStandard.prototype, \"showItStandard\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShowItStandard.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[showItStandard]'\n                },] },\n    ];\n    /** @nocollapse */\n    ShowItStandard.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ShowItStandard.propDecorators = {\n        'showItStandard': [{ type: core_1.Input },],\n    };\n    return ShowItStandard;\n}(index_1.RESPONSIVE_BASE));\nexports.ShowItStandard = ShowItStandard;\nvar HideItStandard = (function (_super) {\n    __extends(HideItStandard, _super);\n    function HideItStandard(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(HideItStandard.prototype, \"hideItStandard\", {\n        set: function (grid_state) {\n            this.setGrid(grid_state, 'standard');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HideItStandard.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[hideItStandard]'\n                },] },\n    ];\n    /** @nocollapse */\n    HideItStandard.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    HideItStandard.propDecorators = {\n        'hideItStandard': [{ type: core_1.Input },],\n    };\n    return HideItStandard;\n}(index_1.RESPONSIVE_BASE));\nexports.HideItStandard = HideItStandard;\nvar IsPortrait = (function (_super) {\n    __extends(IsPortrait, _super);\n    function IsPortrait(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'portrait';\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(IsPortrait.prototype, \"isPortrait\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'orientation');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsPortrait.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isPortrait]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsPortrait.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsPortrait.propDecorators = {\n        'isPortrait': [{ type: core_1.Input },],\n    };\n    return IsPortrait;\n}(index_1.RESPONSIVE_BASE));\nexports.IsPortrait = IsPortrait;\nvar IsLandscape = (function (_super) {\n    __extends(IsLandscape, _super);\n    function IsLandscape(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'landscape';\n        this._showWhenTrue = false;\n    }\n    Object.defineProperty(IsLandscape.prototype, \"isLandscape\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'orientation');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsLandscape.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isLandscape]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsLandscape.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsLandscape.propDecorators = {\n        'isLandscape': [{ type: core_1.Input },],\n    };\n    return IsLandscape;\n}(index_1.RESPONSIVE_BASE));\nexports.IsLandscape = IsLandscape;\nvar DeviceInfo = (function () {\n    function DeviceInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.device = new core_1.EventEmitter();\n    }\n    Object.defineProperty(DeviceInfo.prototype, \"responsiveSizeInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DeviceInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.deviceObserver.subscribe(this.updateData.bind(this));\n    };\n    DeviceInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    DeviceInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this.noRepeat, value);\n        if (update) {\n            this.device.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    DeviceInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this.noRepeat = newValue;\n            return true;\n        }\n    };\n    DeviceInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'deviceInfo'\n                },] },\n    ];\n    /** @nocollapse */\n    DeviceInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    DeviceInfo.propDecorators = {\n        'device': [{ type: core_1.Output },],\n    };\n    return DeviceInfo;\n}());\nexports.DeviceInfo = DeviceInfo;\nvar DeviceStandardInfo = (function () {\n    function DeviceStandardInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.standard = new core_1.EventEmitter();\n    }\n    Object.defineProperty(DeviceStandardInfo.prototype, \"deviceStandardInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DeviceStandardInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.standardObserver.subscribe(this.updateData.bind(this));\n    };\n    DeviceStandardInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    DeviceStandardInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this.noRepeat, value);\n        if (update) {\n            this.standard.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    DeviceStandardInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this.noRepeat = newValue;\n            return true;\n        }\n    };\n    DeviceStandardInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: \"deviceStandardInfo\", inputs: ['deviceStandardInfo'], outputs: ['standard']\n                },] },\n    ];\n    /** @nocollapse */\n    DeviceStandardInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    return DeviceStandardInfo;\n}());\nexports.DeviceStandardInfo = DeviceStandardInfo;\nvar OrientationInfo = (function () {\n    function OrientationInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.orientation = new core_1.EventEmitter();\n    }\n    Object.defineProperty(OrientationInfo.prototype, \"responsiveSizeInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OrientationInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.orientationObserver.subscribe(this.updateData.bind(this));\n    };\n    OrientationInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    OrientationInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this.noRepeat, value);\n        if (update) {\n            this.orientation.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    OrientationInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this.noRepeat = newValue;\n            return true;\n        }\n    };\n    OrientationInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'orientationInfo',\n                    outputs: ['orientation']\n                },] },\n    ];\n    /** @nocollapse */\n    OrientationInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    return OrientationInfo;\n}());\nexports.OrientationInfo = OrientationInfo;\n//# sourceMappingURL=devices-directives.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/pixelratio/pixelratio-directives.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\n/*======== 1x =========*/\nvar Is1xPixel = (function (_super) {\n    __extends(Is1xPixel, _super);\n    function Is1xPixel(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = '1x';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(Is1xPixel.prototype, \"is1xPixel\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'pixelratio');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Is1xPixel.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[is1xPixel]'\n                },] },\n    ];\n    /** @nocollapse */\n    Is1xPixel.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    Is1xPixel.propDecorators = {\n        'is1xPixel': [{ type: core_1.Input },],\n    };\n    return Is1xPixel;\n}(index_1.RESPONSIVE_BASE));\nexports.Is1xPixel = Is1xPixel;\n/*======== RETINA =========*/\nvar IsRetina = (function (_super) {\n    __extends(IsRetina, _super);\n    function IsRetina(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = 'retina';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(IsRetina.prototype, \"isRetina\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'pixelratio');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IsRetina.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[isRetina]'\n                },] },\n    ];\n    /** @nocollapse */\n    IsRetina.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    IsRetina.propDecorators = {\n        'isRetina': [{ type: core_1.Input },],\n    };\n    return IsRetina;\n}(index_1.RESPONSIVE_BASE));\nexports.IsRetina = IsRetina;\n/*======== 4K =========*/\nvar Is4k = (function (_super) {\n    __extends(Is4k, _super);\n    function Is4k(templateRef, viewContainer, _responsiveState, cd) {\n        _super.call(this, templateRef, viewContainer, _responsiveState, cd);\n        this._state = '4k';\n        this._showWhenTrue = true;\n    }\n    Object.defineProperty(Is4k.prototype, \"isRetina\", {\n        set: function (grid_state) {\n            this.setGrid(this._state, 'pixelratio');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Is4k.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[is4k]'\n                },] },\n    ];\n    /** @nocollapse */\n    Is4k.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: core_1.ViewContainerRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    Is4k.propDecorators = {\n        'isRetina': [{ type: core_1.Input },],\n    };\n    return Is4k;\n}(index_1.RESPONSIVE_BASE));\nexports.Is4k = Is4k;\n/*======== DeviceInfo =========*/\nvar PixelRatioInfo = (function () {\n    function PixelRatioInfo(_responsiveState, viewContainer, cd) {\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.pixelratio = new core_1.EventEmitter();\n    }\n    Object.defineProperty(PixelRatioInfo.prototype, \"pixelratioInfo\", {\n        set: function (grid_state) {\n            this.updateData(this.currentstate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PixelRatioInfo.prototype.ngOnInit = function () {\n        this._subscription = this._responsiveState.pixelObserver.subscribe(this.updateData.bind(this));\n    };\n    PixelRatioInfo.prototype.ngOnDestroy = function () {\n        this._subscription.unsubscribe();\n    };\n    PixelRatioInfo.prototype.updateData = function (value) {\n        var update = this._ifValueChanged(this.noRepeat, value);\n        if (update) {\n            this.pixelratio.emit(value);\n            this.cd.markForCheck();\n        }\n    };\n    PixelRatioInfo.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else\n            this.noRepeat = newValue;\n        return true;\n    };\n    PixelRatioInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'pixelratioInfo',\n                    inputs: ['pixelratioInfo']\n                },] },\n    ];\n    /** @nocollapse */\n    PixelRatioInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    PixelRatioInfo.propDecorators = {\n        'pixelratio': [{ type: core_1.Output },],\n    };\n    return PixelRatioInfo;\n}());\nexports.PixelRatioInfo = PixelRatioInfo;\n//# sourceMappingURL=pixelratio-directives.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/responsive/responsive.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar Responsive = (function () {\n    function Responsive(templateRef, _responsiveState, viewContainer, cd) {\n        this.templateRef = templateRef;\n        this._responsiveState = _responsiveState;\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.changes = new core_1.EventEmitter();\n        this.set_values = {\n            bootstrap: '',\n            browser: '',\n            device: '',\n            pixelratio: '',\n            orientation: '',\n            standard: '',\n            ie: '',\n            sizes: 0\n        };\n        this.set_active_subscriptions = {\n            bootstrap: false,\n            browser: false,\n            device: false,\n            pixelratio: false,\n            orientation: false,\n            standard: false,\n            ie: false,\n            sizes: false\n        };\n        this.match_multiple = {\n            bootstrap: false,\n            browser: false,\n            device: false,\n            pixelratio: false,\n            orientation: false,\n            standard: false,\n            ie: false,\n            sizes: false\n        };\n        this._showWhenTrue = true;\n        this._globalNoRepeat = 0;\n        this._bootstrapNoRepeat = 0;\n        this._deviceNoRepeat = 0;\n        this._standardNoRepeat = 0;\n        this._orientationNoRepeat = 0;\n        this._browserNoRepeat = 0;\n        this._pixelratioNoRepeat = 0;\n        this._ieNoRepeat = 0;\n        this._sizesNoRepeat = 0;\n        this._bootstrap_user_param = [];\n        this._devices_user_param = [];\n        this._standard_user_param = [];\n        this._orientation_user_param = [];\n        this._browser_user_param = [];\n        this._pixelratio_user_param = [];\n        this._ie_user_param = [];\n        this._sizes_user_param = [];\n        this._sizes_window = 'window';\n        this._actives = [];\n    }\n    Object.defineProperty(Responsive.prototype, \"responsive\", {\n        set: function (config) {\n            this.init_responsive(config);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Responsive.prototype.init_responsive = function (value) {\n        if (this.isJSON(value)) {\n            if (!!value.bootstrap && this._bootstrapNoRepeat === 0) {\n                this._bootstrap_user_param = (Array.isArray(value.bootstrap) ? value.bootstrap : [value.bootstrap]);\n                this._bootstrapNoRepeat = 1;\n                this.set_active_subscriptions.bootstrap = true;\n            }\n            if (!!value.device && this._deviceNoRepeat === 0) {\n                this._devices_user_param = (Array.isArray(value.device) ? value.device : [value.device]);\n                this._deviceNoRepeat = 1;\n                this.set_active_subscriptions.device = true;\n            }\n            if (!!value.standard && this._standardNoRepeat === 0) {\n                this._standard_user_param = (Array.isArray(value.standard) ? value.standard : [value.standard]);\n                this._standardNoRepeat = 1;\n                this.set_active_subscriptions.standard = true;\n            }\n            if (!!value.orientation && this._orientationNoRepeat === 0) {\n                this._orientation_user_param = (Array.isArray(value.orientation) ? value.orientation : [value.orientation]);\n                this._orientationNoRepeat = 1;\n                this.set_active_subscriptions.orientation = true;\n            }\n            if (!!value.browser && this._browserNoRepeat === 0) {\n                this._browser_user_param = (Array.isArray(value.browser) ? value.browser : [value.browser]);\n                this._browserNoRepeat = 1;\n                this.set_active_subscriptions.browser = true;\n            }\n            if (!!value.pixelratio && this._pixelratioNoRepeat === 0) {\n                this._pixelratio_user_param = (Array.isArray(value.pixelratio) ? value.pixelratio : [value.pixelratio]);\n                this._pixelratioNoRepeat = 1;\n                this.set_active_subscriptions.pixelratio = true;\n            }\n            if (!!value.ie && this._ieNoRepeat === 0) {\n                this._ie_user_param = (Array.isArray(value.ie) ? value.ie : [value.ie]);\n                this._ieNoRepeat = 1;\n                this.set_active_subscriptions.ie = true;\n            }\n            if (!!value.sizes && this._sizesNoRepeat === 0) {\n                var min = value.sizes.min;\n                var max = value.sizes.max;\n                var win = value.sizes.window;\n                if (win !== undefined) {\n                    this._sizes_window = win;\n                }\n                this._sizes_user_param = [min, max];\n                this._sizesNoRepeat = 1;\n                this.set_active_subscriptions.sizes = true;\n            }\n        }\n        else if (Array.isArray(value))\n            throw new Error('Responsive directive don´t work with a only array parameter');\n        else if (typeof value === 'string')\n            throw new Error('Responsive directive don´t work with a only string parameter');\n        else if (typeof value === 'number')\n            throw new Error('Responsive directive don´t work with a only number parameter');\n        else if (typeof value === 'undefined' || value === null)\n            throw new Error('Responsive directive don´t work without a param');\n        for (var key in this.set_active_subscriptions) {\n            if (this.set_active_subscriptions[key])\n                this._actives.push(key);\n        }\n        if (this.set_active_subscriptions.bootstrap)\n            this._subscription_Bootstrap = this._responsiveState.elementoObservar.subscribe(this.updateBootstrap.bind(this));\n        if (this.set_active_subscriptions.browser)\n            this._subscription_Browser = this._responsiveState.browserObserver.subscribe(this.updateBrowser.bind(this));\n        if (this.set_active_subscriptions.device)\n            this._subscription_Device = this._responsiveState.deviceObserver.subscribe(this.updateDevice.bind(this));\n        if (this.set_active_subscriptions.pixelratio)\n            this._subscription_Pixel_Ratio = this._responsiveState.pixelObserver.subscribe(this.updatePixelRatio.bind(this));\n        if (this.set_active_subscriptions.orientation)\n            this._subscription_Orientation = this._responsiveState.orientationObserver.subscribe(this.updateOrientation.bind(this));\n        if (this.set_active_subscriptions.standard)\n            this._subscription_Standard = this._responsiveState.standardObserver.subscribe(this.updateStandard.bind(this));\n        if (this.set_active_subscriptions.ie)\n            this._subscription_IE_Version = this._responsiveState.ieVersionObserver.subscribe(this.updateIEversion.bind(this));\n        if (this.set_active_subscriptions.sizes)\n            this._subscription_custom_sizes = this._responsiveState.anchoObservar.subscribe(this.updateSizes.bind(this));\n    };\n    Responsive.prototype.updateBootstrap = function (value) {\n        var _update = this._ifValueChanged(this._noRepeatBootstrapName, value);\n        if (_update) {\n            this.set_values.bootstrap = value;\n        }\n        this.updateEvent(this.set_values.bootstrap, 'bootstrap');\n    };\n    Responsive.prototype.updateBrowser = function (value) {\n        this.set_values.browser = value;\n        this.updateEvent(this.set_values.browser, 'browser');\n    };\n    Responsive.prototype.updateDevice = function (value) {\n        this.set_values.device = value;\n        this.updateEvent(this.set_values.device, 'device');\n    };\n    Responsive.prototype.updatePixelRatio = function (value) {\n        this.set_values.pixelratio = value;\n        this.updateEvent(this.set_values.pixelratio, 'pixelratio');\n    };\n    Responsive.prototype.updateOrientation = function (value) {\n        this.set_values.orientation = value;\n        this.updateEvent(this.set_values.orientation, 'orientation');\n    };\n    Responsive.prototype.updateStandard = function (value) {\n        this.set_values.standard = value;\n        this.updateEvent(this.set_values.standard, 'standard');\n    };\n    Responsive.prototype.updateIEversion = function (value) {\n        this.set_values.ie = value;\n        this.updateEvent(this.set_values.ie, 'ie');\n    };\n    Responsive.prototype.updateSizes = function (value) {\n        if (!this._sizes_window)\n            this.set_values.sizes = value;\n        else\n            this.set_values.sizes = this._responsiveState.getWidth(this._sizes_window);\n        this.updateEvent(this.set_values.sizes, 'sizes');\n    };\n    Responsive.prototype.updateEvent = function (param, type_directive) {\n        if (!!this._showWhenTrue) {\n            switch (type_directive) {\n                case 'bootstrap':\n                    this.showHideOperations(this._bootstrap_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'device':\n                    this.showHideOperations(this._devices_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'standard':\n                    this.showHideOperations(this._standard_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'orientation':\n                    this.showHideOperations(this._orientation_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'browser':\n                    this.showHideOperations(this._browser_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'pixelratio':\n                    this.showHideOperations(this._pixelratio_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'ie':\n                    this.showHideOperations(this._ie_user_param.indexOf(param) !== -1, type_directive);\n                    break;\n                case 'sizes':\n                    this.showHideOperations(!!(param >= this._sizes_user_param[0] && param <= this._sizes_user_param[1]), type_directive);\n                    break;\n                default:\n                    null;\n            }\n        }\n        else {\n            switch (type_directive) {\n                case 'bootstrap':\n                    this.showHideOperations(!(this._bootstrap_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'device':\n                    this.showHideOperations(!(this._devices_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'standard':\n                    this.showHideOperations(!(this._standard_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'orientation':\n                    this.showHideOperations(!(this._orientation_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'browser':\n                    this.showHideOperations(!(this._browser_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'pixelratio':\n                    this.showHideOperations(!(this._pixelratio_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'ie':\n                    this.showHideOperations(!(this._ie_user_param.indexOf(param)), type_directive);\n                    break;\n                case 'sizes':\n                    this.showHideOperations(!(!!(param >= this._sizes_user_param[0] && param <= this._sizes_user_param[1])), type_directive);\n                    break;\n                default:\n                    null;\n            }\n        }\n    };\n    Responsive.prototype.showHideOperations = function (show, type_directive) {\n        var global_state = this.matchValues(show, type_directive);\n        if (!!global_state) {\n            if (this._globalNoRepeat === 0) {\n                this._globalNoRepeat = 1;\n                this.viewContainer.createEmbeddedView(this.templateRef);\n                this.changes.emit(true);\n                this.cd.markForCheck();\n            }\n        }\n        else {\n            this._globalNoRepeat = 0;\n            this.changes.emit(false);\n            this.viewContainer.clear();\n            this.cd.markForCheck();\n        }\n    };\n    Responsive.prototype.matchValues = function (show, type_directive) {\n        var match = true;\n        if (show) {\n            this.match_multiple[type_directive] = true;\n        }\n        else {\n            this.match_multiple[type_directive] = false;\n        }\n        for (var all_key in this.match_multiple) {\n            for (var _i = 0, _a = this._actives; _i < _a.length; _i++) {\n                var active = _a[_i];\n                if (all_key == active && this.match_multiple[all_key] === false)\n                    return match = false;\n            }\n        }\n        return match;\n    };\n    Responsive.prototype.ngOnDestroy = function () {\n        if (this.set_active_subscriptions.bootstrap)\n            this._subscription_Bootstrap.unsubscribe();\n        if (this.set_active_subscriptions.browser)\n            this._subscription_Browser.unsubscribe();\n        if (this.set_active_subscriptions.device)\n            this._subscription_Device.unsubscribe();\n        if (this.set_active_subscriptions.pixelratio)\n            this._subscription_Pixel_Ratio.unsubscribe();\n        if (this.set_active_subscriptions.orientation)\n            this._subscription_Orientation.unsubscribe();\n        if (this.set_active_subscriptions.standard)\n            this._subscription_Standard.unsubscribe();\n        if (this.set_active_subscriptions.ie)\n            this._subscription_IE_Version.unsubscribe();\n        if (this.set_active_subscriptions.sizes)\n            this._subscription_custom_sizes.unsubscribe();\n    };\n    Responsive.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else {\n            this._noRepeatBootstrapName = newValue;\n            return true;\n        }\n    };\n    Responsive.prototype.isJSON = function (value) {\n        try {\n            JSON.stringify(value);\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    Responsive.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[responsive]'\n                },] },\n    ];\n    /** @nocollapse */\n    Responsive.ctorParameters = function () { return [\n        { type: core_1.TemplateRef, },\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ViewContainerRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    Responsive.propDecorators = {\n        'responsive': [{ type: core_1.Input },],\n        'changes': [{ type: core_1.Output },],\n    };\n    return Responsive;\n}());\nexports.Responsive = Responsive;\n//# sourceMappingURL=responsive.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/responsive-window/responsive-window.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar ResponsiveWindow = (function () {\n    function ResponsiveWindow(_responsiveState, el, cd) {\n        this._responsiveState = _responsiveState;\n        this.el = el;\n        this.cd = cd;\n        this.element = el.nativeElement;\n    }\n    ResponsiveWindow.prototype.ngOnInit = function () {\n        this._responsiveState.registerWindow(this);\n    };\n    ResponsiveWindow.prototype.ngDoCheck = function () {\n        var update = this._ifValueChanged(this._noRepeat, this.name);\n        if (update) {\n            this._responsiveState.unregisterWindow(this);\n            this._responsiveState.registerWindow(this);\n            this.cd.markForCheck();\n        }\n    };\n    ResponsiveWindow.prototype.ngOnDestroy = function () {\n        this._responsiveState.unregisterWindow(this);\n    };\n    ResponsiveWindow.prototype.getWidth = function () {\n        return this.element.offsetWidth;\n    };\n    ResponsiveWindow.prototype._ifValueChanged = function (oldValue, newValue) {\n        if (oldValue === newValue)\n            return false;\n        else\n            this._noRepeat = newValue;\n        return true;\n    };\n    ResponsiveWindow.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: \"[responsive-window]\"\n                },] },\n    ];\n    /** @nocollapse */\n    ResponsiveWindow.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ElementRef, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    ResponsiveWindow.propDecorators = {\n        'name': [{ type: core_1.Input, args: ['responsive-window',] },],\n    };\n    return ResponsiveWindow;\n}());\nexports.ResponsiveWindow = ResponsiveWindow;\n//# sourceMappingURL=responsive-window.js.map","/home/travis/build/npmtest/node-npmtest-ng2-responsive/node_modules/ng2-responsive/useragent/useragent.js":"\"use strict\";\nvar core_1 = require('@angular/core');\nvar index_1 = require('../config/index');\nvar UserAgentInfo = (function () {\n    function UserAgentInfo(_responsiveState, cd) {\n        this._responsiveState = _responsiveState;\n        this.cd = cd;\n        this.info = new core_1.EventEmitter();\n    }\n    UserAgentInfo.prototype.ngOnInit = function () {\n        this._subscription_UserAgent = this._responsiveState.userAgentObserver.subscribe(this.emitUserAgent.bind(this));\n    };\n    UserAgentInfo.prototype.ngOnDestroy = function () {\n        this._subscription_UserAgent.unsubscribe();\n    };\n    UserAgentInfo.prototype.emitUserAgent = function (value) {\n        this.info.emit(value);\n        this.cd.markForCheck();\n    };\n    UserAgentInfo.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'userAgentInfo', outputs: ['info']\n                },] },\n    ];\n    /** @nocollapse */\n    UserAgentInfo.ctorParameters = function () { return [\n        { type: index_1.ResponsiveState, },\n        { type: core_1.ChangeDetectorRef, },\n    ]; };\n    return UserAgentInfo;\n}());\nexports.UserAgentInfo = UserAgentInfo;\n//# sourceMappingURL=useragent.js.map"}